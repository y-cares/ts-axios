{"map":"{\"version\":3,\"file\":\"headers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/helpers/headers.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EACH,aAAa,EACb,SAAS,EACZ,MAAM,QAAQ,CAAC;AAEhB,SAAS,mBAAmB,CAAC,OAAY,EAAE,aAAqB;IAC5D,IAAI,CAAC,OAAO;QAAE,OAAO;IACrB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;QAC7B,IAAI,IAAI,KAAK,aAAa,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,aAAa,CAAC,WAAW,EAAE,EAAE;YAC9E,OAAO,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YACvC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;SACxB;IACL,CAAC,CAAC,CAAA;AACN,CAAC;AAED,iBAAiB;AACjB,MAAM,UAAU,cAAc,CAAC,OAAY,EAAE,IAAS;IAClD,mBAAmB,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAC7C,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;QACrB,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YACrC,OAAO,CAAC,cAAc,CAAC,GAAG,iCAAiC,CAAC;SAC/D;KACJ;IACD,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,oBAAoB;AACpB,MAAM,UAAU,YAAY,CAAC,OAAe;IACxC,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,CAAC,OAAO;QAAE,OAAO,MAAM,CAAC;IAC5B,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;QAC1B,IAAA,oBAAgC,EAA/B,WAAG,EAAE,kBAA0B,CAAC;QACrC,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,GAAG;YAAE,OAAO;QACjB,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;QAClC,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACtB,CAAC,CAAC,CAAA;IACF,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,aAAa;AACb,MAAM,UAAU,cAAc,CAAC,OAAY,EAAE,MAAc;IACvD,IAAI,CAAC,OAAO;QAAE,OAAO,OAAO,CAAC;IAE7B,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;IAE9D,IAAM,eAAe,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IAE/F,eAAe,CAAC,OAAO,CAAC,UAAA,MAAM;QAC1B,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAA;IAEF,OAAO,OAAO,CAAC;AACnB,CAAC\"}","code":"import { isPlainObject, deepMerge } from './util';\r\nfunction normalizeHeaderName(headers, normalizeName) {\r\n    if (!headers)\r\n        return;\r\n    Object.keys(headers).forEach(function (name) {\r\n        if (name !== normalizeName && name.toUpperCase() === normalizeName.toUpperCase()) {\r\n            headers[normalizeName] = headers[name];\r\n            delete headers[name];\r\n        }\r\n    });\r\n}\r\n// 统一 headers 的格式\r\nexport function processHeaders(headers, data) {\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n    if (isPlainObject(data)) {\r\n        if (headers && !headers['Content-Type']) {\r\n            headers['Content-Type'] = 'application/json;charset=utf-8;';\r\n        }\r\n    }\r\n    return headers;\r\n}\r\n// 转译返回的 headers 的格式\r\nexport function parseHeaders(headers) {\r\n    var parsed = Object.create(null);\r\n    if (!headers)\r\n        return parsed;\r\n    headers.split('\\r\\n').forEach(function (line) {\r\n        var _a = line.split(':'), key = _a[0], vals = _a.slice(1);\r\n        key = key.trim().toLowerCase();\r\n        if (!key)\r\n            return;\r\n        var val = vals.join(':').trim();\r\n        parsed[key] = val;\r\n    });\r\n    return parsed;\r\n}\r\n// 合并 headers\r\nexport function flattenHeaders(headers, method) {\r\n    if (!headers)\r\n        return headers;\r\n    headers = deepMerge(headers.common, headers[method], headers);\r\n    var methodsToDelete = ['delete', 'get', 'head', 'optioms', 'post', 'put', 'patch', 'common'];\r\n    methodsToDelete.forEach(function (method) {\r\n        delete headers[method];\r\n    });\r\n    return headers;\r\n}\r\n//# sourceMappingURL=headers.js.map","dts":{"name":"/Users/nan/Desktop/ts-axios/dist/types/helpers/headers.d.ts","writeByteOrderMark":false,"text":"import { Method } from '../types';\r\nexport declare function processHeaders(headers: any, data: any): any;\r\nexport declare function parseHeaders(headers: string): any;\r\nexport declare function flattenHeaders(headers: any, method: Method): any;\r\n"}}

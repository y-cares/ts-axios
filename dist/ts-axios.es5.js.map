{"version":3,"file":"ts-axios.es5.js","sources":["../src/core/interceptorManager.ts","../src/helpers/util.ts","../src/helpers/url.ts","../src/helpers/headers.ts","../src/core/transform.ts","../src/helpers/error.ts","../src/helpers/cookie.ts","../src/core/xhr.ts","../src/core/dispatchRequest.ts","../src/core/mergeConfig.ts","../src/core/Axios.ts","../src/helpers/data.ts","../src/defaults.ts","../src/cancel/cancel.ts","../src/cancel/cancelToken.ts","../src/axios.ts"],"sourcesContent":["// 拦截器类\nimport {ResolveFn, RejectedFn} from '../types';\ninterface Interceptor<T> {\n    resolved: ResolveFn<T>;\n    rejected?: RejectedFn;\n}\n\nexport default class InterceptorManager<T> {\n    private interceptors: Array<Interceptor<T> | null>;\n    constructor() {\n        this.interceptors = [];\n    }\n\n    // 添加拦截器\n    use(resolved: ResolveFn<T>, rejected: RejectedFn): number {\n        this.interceptors.push({\n            resolved,\n            rejected\n        })\n        return this.interceptors.length - 1;\n    }\n\n    // 暴露已添加的拦截器\n    forEach(fn: (interceptor: Interceptor<T>) => void): void {\n        this.interceptors.forEach(interceptor => {\n            if (interceptor !== null) {\n                fn(interceptor);\n            }\n        })\n    }\n\n    // 删除指定拦截器\n    eject(id: number): void {\n        if (this.interceptors[id]) {\n            this.interceptors[id] = null;\n        }\n    }\n\n}","// 工具方法\nconst toString = Object.prototype.toString;\n\n// 时间判断\nexport function isDate(val: any): val is Date {\n    return toString.call(val) === '[object Date]';\n};\n\n// 对象判断\nexport function isObject(val: any): val is Object {\n    return val !== null && typeof val === 'object';\n}\n\n// 对象判断\nexport function isPlainObject(val: any): val is Object {\n    return toString.call(val) === '[object Object]';\n}\n\n// 混合对象\nexport function extend<T, U>(to: T, from: U): T & U {\n    for (const key in from) {\n        ;(to as T & U)[key] = from[key] as any;\n    }\n    return to as T & U;\n}\n\n// 深层 merge 方法\nexport function deepMerge(...objs: any[]): any {\n    const result = Object.create(null);\n    objs.forEach(obj => {\n        if (obj) {\n            Object.keys(obj).forEach(key => {\n                const val = obj[key];\n                if (isPlainObject(val)) {\n                    if (isPlainObject(result[key])) {\n                        result[key] = deepMerge(result[key], val);\n                    } else {\n                        result[key] = deepMerge(val);\n                    }\n                } else {\n                    result[key] = val;\n                }\n            })\n        }\n    })\n    return result;\n}\n\n// 判断FormData\nexport function isFormData(val: any): val is FormData {\n    return typeof val !== 'undefined' && val instanceof FormData;\n}\n\n// 判断是否是序列化的实例\nexport function isURLSearchParams(val: any): val is URLSearchParams {\n    return typeof val !== 'undefined' && val instanceof URLSearchParams;\n}\n","// 处理 url 的辅助方法\nimport {\n    isDate,\n    isPlainObject,\n    isURLSearchParams\n} from './util';\n\ninterface URLOrigin {\n    protocol: string;\n    host: string;\n}\n\nfunction enCode(val: string): string {\n    return encodeURIComponent(val)\n        .replace(/%40/g, '@')\n        .replace(/%3A/ig, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/ig, ',')\n        .replace(/%20/g, '+')\n        .replace(/%5B/ig, '[')\n        .replace(/%5D/ig, ']')\n}\n\nexport function buildUrl(url: string, params?: any, paramsSerialize?: (params: any) => string): string {\n    if (!params) return url;\n\n    let serializedParams;\n\n    // 自定义参数序列化规则\n    if (paramsSerialize) {\n        serializedParams = paramsSerialize(params)\n    } else if (isURLSearchParams(params)) {\n        serializedParams = params.toString();\n    } else {\n        const parts: string[] = [];\n\n        Object.keys(params).forEach(key => {\n            const val = params[key];\n            if (val === null || typeof val === 'undefined') return;\n            let values = [];\n            if (Array.isArray(val)) {\n                values = val;\n                key += '[]';\n            } else {\n                values = [val];\n            };\n            values.forEach(val => {\n                if (isDate(val)) {\n                    val = val.toISOString();\n                } else if (isPlainObject(val)) {\n                    val = JSON.stringify(val);\n                }\n                parts.push(`${enCode(key)}=${enCode(val)}`);\n            })\n        });\n    \n        serializedParams = parts.join('&');\n    }\n\n    if (serializedParams) {\n        const marIndex = url.indexOf('#');\n        if (marIndex !== -1) {\n            url = url.slice(0, marIndex);\n        }\n        url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n    }\n\n    return url;\n};\n\n// 判断是否是绝对路径\nexport function isAbsoluteURL(url: string): boolean {\n    return /(^[a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n}\n\nexport function combineURL(baseURL: string, relativeURL?: string): string {\n    return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n}\n\n// 判断是否是同源请求\nexport function isURLSameOrigin(requestURL: string): boolean{\n    const parseOrigin = resolveURL(requestURL);\n    return ((parseOrigin.protocol === currentOrigin.protocol) && (parseOrigin.host === currentOrigin.host));\n}\n\nconst urlParsingNode = document.createElement('a');\nconst currentOrigin = resolveURL(window.location.href);\n\nfunction resolveURL(url: string): URLOrigin {\n    urlParsingNode.setAttribute('href', url);\n    const { protocol, host } = urlParsingNode;\n    return {\n        protocol,\n        host\n    }\n}\n","import { Method } from '../types';\nimport {\n    isPlainObject,\n    deepMerge\n} from './util';\n\nfunction normalizeHeaderName(headers: any, normalizeName: string): void {\n    if (!headers) return;\n    Object.keys(headers).forEach(name => {\n        if (name !== normalizeName && name.toUpperCase() === normalizeName.toUpperCase()) {\n            headers[normalizeName] = headers[name];\n            delete headers[name];\n        }\n    })\n}\n\n// 统一 headers 的格式\nexport function processHeaders(headers: any, data: any): any {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (isPlainObject(data)) {\n        if (headers && !headers['Content-Type']) {\n            headers['Content-Type'] = 'application/json;charset=utf-8;';\n        }\n    }\n    return headers;\n}\n\n// 转译返回的 headers 的格式\nexport function parseHeaders(headers: string): any {\n    let parsed = Object.create(null);\n    if (!headers) return parsed;\n    headers.split('\\r\\n').forEach(line => {\n        let [key, ...vals] = line.split(':');\n        key = key.trim().toLowerCase();\n        if (!key) return;\n        const val = vals.join(':').trim();\n        parsed[key] = val;\n    })\n    return parsed;\n}\n\n// 合并 headers\nexport function flattenHeaders(headers: any, method: Method):any {\n    if (!headers) return headers;\n\n    headers = deepMerge(headers.common, headers[method], headers);\n\n    const methodsToDelete = ['delete', 'get', 'head', 'optioms', 'post', 'put', 'patch', 'common'];\n\n    methodsToDelete.forEach(method => {\n        delete headers[method];\n    })\n\n    return headers;\n}\n","import { AxiosTransformer } from './../types/index';\n// 转译文件\nexport default function transform(data: any, headers: any, fns?: AxiosTransformer | AxiosTransformer[]): any {\n    if (!fns) return data;\n\n    if (!Array.isArray(fns)) {\n        fns = [fns];\n    }\n\n    fns.forEach(fn => {\n        data = fn(data, headers);\n    })\n\n    return data;\n}\n\n\n\n\n\n","// 报错信息类\nimport { \n    AxiosRequestConfig,\n    AxiosResponse\n} from '../types';\n\nexport class AxiosError extends Error {\n    isAxiosError: boolean;\n    config: AxiosRequestConfig;\n    code?: string | null;\n    request?: any;\n    response?: AxiosResponse;\n\n    constructor(\n        message: string,\n        config: AxiosRequestConfig,\n        code?: string | null,\n        request?: any,\n        response?: AxiosResponse\n    ) {\n        super(message);\n\n        this.config = config;\n        this.code = code;\n        this.request = request;\n        this.response = response;\n        this.isAxiosError = true;\n\n        Object.setPrototypeOf(this, AxiosError.prototype)\n    }\n}\n\nexport function createError(\n    message: string,\n    config: AxiosRequestConfig,\n    code?: string | null,\n    request?: any,\n    response?: AxiosResponse\n): AxiosError {\n    const error = new AxiosError(\n        message,\n        config,\n        code,\n        request,\n        response\n    );\n    return error;\n}\n","// cookie 文件\nconst cookie = {\n    // 读取cookie\n    read(name: string): string | null {\n        const match = document.cookie.match(new RegExp('(^|;\\\\S*)('+name+')=([^;]*)'));\n        return match ? decodeURIComponent(match[3]) : null;\n    }\n}\n\nexport default cookie;\n","// axios 请求逻辑\nimport {\n    AxiosRequestConfig,\n    AxiosResponse,\n    AxiosPromise\n} from '../types';\nimport { parseHeaders } from '../helpers/headers';\nimport { createError } from '../helpers/error';\nimport { isURLSameOrigin } from '../helpers/url';\nimport cookie from '../helpers/cookie';\nimport { isFormData } from '../helpers/util';\n\nexport default function xhr(config: AxiosRequestConfig): AxiosPromise {\n    return new Promise((resolve, reject) => {\n\n        const {\n            data = null,\n            url,\n            method = 'get',\n            headers,\n            responseType,\n            timeout,\n            cancelToken,\n            withCredentials,\n            xsrfCookieName,\n            xsrfHeaderName,\n            onDownloadProgress,\n            onUploadProgress,\n            auth,\n            validateStatus\n        } = config;\n\n        const request = new XMLHttpRequest();\n\n        request.open(method.toUpperCase(), url!, true);\n\n        configureRequest();\n\n        addEvents();\n\n        processHeaders();\n\n        processCancel();\n\n        request.send(data);\n\n        function configureRequest(): void {\n            if (responseType) {\n                request.responseType = responseType;\n            }\n    \n            if (timeout) request.timeout = timeout;\n    \n            // 跨域请求\n            if (withCredentials) request.withCredentials = withCredentials;\n        }\n\n        function addEvents(): void {\n            request.onreadystatechange = function handleLoad() {\n                if (request.readyState !== 4) return;\n    \n                if (request.status === 0) return;\n    \n                const responseHeaders = parseHeaders(request.getAllResponseHeaders());\n                const responseData = responseType !== 'text' ? request.response : request.responseText;\n                const response: AxiosResponse = {\n                    data: responseData,\n                    status: request.status,\n                    statusText: request.statusText,\n                    headers: responseHeaders,\n                    config,\n                    request\n                }\n                handleResponse(response);\n            }\n    \n            request.onerror = function handleError() {\n                reject(createError(\n                    'Network Error',\n                    config,\n                    null,\n                    request\n                ));\n            }\n            \n            // 请求超时\n            request.ontimeout = function handleTimeout() {\n                reject(createError(\n                    `Timeout of ${timeout} ms exceeded`,\n                    config,\n                    'ECONNABORTED',\n                    request\n                ));\n            }\n    \n            // 下载进度监控\n            if (onDownloadProgress) request.onprogress = onDownloadProgress;\n    \n            // 上传进度监控\n            if (onUploadProgress) request.upload.onprogress = onUploadProgress;\n        }\n\n        function processHeaders(): void {\n            if (isFormData(data)) delete headers['Content-Type'];\n\n            // xsrf 防御\n            if ((withCredentials || isURLSameOrigin(url!)) && xsrfCookieName) {\n                const xsrfValue = cookie.read(xsrfCookieName);\n                if (xsrfValue && xsrfHeaderName) {\n                    headers[xsrfHeaderName] = xsrfValue;\n                }\n            }\n\n            // http授权\n            if (auth) {\n                headers['Authorization'] = 'Basic ' + btoa(auth.username + ':' + auth.password);\n            }\n\n            Object.keys(headers).forEach(name => {\n                if (data === null && name.toLowerCase() === 'content-type') {\n                    delete headers[name];\n                } else {\n                    request.setRequestHeader(name, headers[name]);\n                }\n            });\n        }\n\n        function processCancel(): void {\n            // 取消请求\n            if (cancelToken) {\n                cancelToken.promise.then(reason => {\n                    request.abort();\n                    reject(reason);\n                }).catch(\n                    /* istanbul ignore next */\n                    () => {\n                    // do nothing\n                })\n            }\n        }\n\n        function handleResponse(response: AxiosResponse): void {\n            if (!validateStatus || validateStatus(response.status)) {\n                resolve(response);\n            } else {\n                reject(createError(\n                    `Request failed with status code ${response.status}`,\n                    config,\n                    null,\n                    request,\n                    response\n                ))\n            }\n        }\n    });\n}\n\n","// 请求前 配置\nimport {\n    AxiosRequestConfig,\n    AxiosPromise,\n    AxiosResponse\n} from '../types';\nimport { buildUrl, isAbsoluteURL, combineURL } from '../helpers/url';\nimport { flattenHeaders } from '../helpers/headers';\nimport transform from './transform';\nimport xhr from './xhr';\n\nfunction dispatchRequest(config: AxiosRequestConfig): AxiosPromise {\n    throwIfCancellationRequested(config);\n    processConfig(config);\n    return xhr(config).then(res => {\n        return transformResponseData(res);\n    },\n    e => {\n        if (e && e.response) {\n          e.response = transformResponseData(e.response)\n        }\n        return Promise.reject(e)\n    });\n};\n\nfunction processConfig(config: AxiosRequestConfig): void {\n    config.url = transformURL(config);\n    config.data = transform(config.data, config.headers, config.transformRequest);\n    config.headers = flattenHeaders(config.headers, config.method!);\n}\n\nexport function transformURL(config: AxiosRequestConfig): string {\n    let { url, params, paramsSerialize, baseURL} = config;\n    if (baseURL && !isAbsoluteURL(url!)) {\n        url = combineURL(baseURL, url);\n    }\n    return buildUrl(url!, params, paramsSerialize);\n}\n\nfunction transformResponseData(res: AxiosResponse): AxiosResponse {\n    res.data = transform(res.data, res.headers, res.config.transformResponse);\n    return res;\n}\n\n// 取消请求报错提示\nfunction throwIfCancellationRequested(config: AxiosRequestConfig): void {\n    if (config.cancelToken) {\n        config.cancelToken.throwIfRequest();\n    }\n}\n\nexport default dispatchRequest;\n","import { AxiosRequestConfig } from './../types/index';\nimport {isPlainObject, deepMerge} from '../helpers/util';\n\n\nconst strats = Object.create(null);\n\n// 默认配置项\nfunction defaultStrat(val1: any, val2: any): any {\n    return typeof val2 !== 'undefined' ? val2 : val1;\n}\n\n// 区后一个配置项的配置\nfunction fromVal2Strat(val1: any, val2: any): any {\n    if (typeof val2 !== 'undefined') return val2;\n}\n\n// 深度合并配置项\nfunction deepMergeStrat(val1: any, val2: any): any {\n    if (isPlainObject(val2)) {\n        return deepMerge(val1, val2);\n    } else if (typeof val2 !== 'undefined') {\n        return val2;\n    } else if (isPlainObject(val1)) {\n        return deepMerge(val1)\n    } else if (typeof val1 !== 'undefined') {\n        return val1;\n    }\n}\n\nconst stratKeysFromVal2 = ['url', 'params', 'data'];\nstratKeysFromVal2.forEach(key => {\n    strats[key] = fromVal2Strat;\n})\n\nconst stratKeysDeepMerge = ['headers', 'auth'];\nstratKeysDeepMerge.forEach(key => {\n    strats[key] = deepMergeStrat;\n})\n\n\n// 合并配置项\nexport default function mergeConfig(\n    config1: AxiosRequestConfig,\n    config2?: AxiosRequestConfig\n): AxiosRequestConfig {\n    if (!config2) config2 = {};\n\n    const config = Object.create(null);\n\n    for (let key in config2) {\n        mergeField(key);\n    }\n\n    for (let key in config1) {\n        if (!config2[key]) mergeField(key);\n    }\n\n    function mergeField(key: string): void {\n        const strat = strats[key] || defaultStrat;\n        config[key] = strat(config1[key], config2![key]);\n    }\n\n    return config;\n}\n\n\n\n","// axios 核心文件\n// axios 对象\nimport {\n    AxiosRequestConfig,\n    AxiosPromise,\n    Method,\n    AxiosResponse,\n    ResolveFn,\n    RejectedFn\n} from '../types';\nimport InterceptorManager from './interceptorManager';\nimport dispatchRequest, { transformURL } from './dispatchRequest';\nimport mergeConfig from './mergeConfig';\n\ninterface Interceptors {\n    request: InterceptorManager<AxiosRequestConfig>\n    response: InterceptorManager<AxiosResponse>\n}\n\ninterface PromiseChain<T> {\n    resolved: ResolveFn<T> | ((config: AxiosRequestConfig) => AxiosPromise);\n    rejected?: RejectedFn;\n}\n\nexport default class Axios {\n    // 默认配置\n    defaults: AxiosRequestConfig;\n\n    // 拦截器\n    interceptors: Interceptors;\n\n    constructor(initConfig: AxiosRequestConfig) {\n        this.defaults = initConfig;\n        this.interceptors = {\n            request: new InterceptorManager<AxiosRequestConfig>(),\n            response: new InterceptorManager<AxiosResponse>()\n        }\n    }\n\n    // 请求方式\n    request(url: any, config?: any): AxiosPromise {\n        if (typeof url === 'string') {\n            if (!config) config = {};\n            config.url = url;\n        } else {\n            config = url;\n        }\n\n        // 合并配置\n        config = mergeConfig(this.defaults, config);\n        config.method = config.method.toLowerCase()\n\n        // 链式调用\n        const chain: PromiseChain<any>[] = [{\n            resolved: dispatchRequest,\n            rejected: undefined\n        }]\n\n        // 请求拦截\n        this.interceptors.request.forEach(interceptor => {\n            chain.unshift(interceptor);\n        })\n\n        // 响应拦截\n        this.interceptors.response.forEach(interceptor => {\n            chain.push(interceptor);\n        })\n\n        let promise = Promise.resolve(config);\n\n        while (chain.length) {\n            const { resolved, rejected} = chain.shift()!;\n            promise = promise.then(resolved, rejected);\n        }\n\n        // return dispatchRequest(config);\n        return promise;\n    }\n    \n    get(url: string, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithoutData('get', url, config);\n    }\n\n    delete(url: string, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithoutData('delete', url, config);\n    }\n\n    head(url: string, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithoutData('delete', url, config);\n    }\n\n    options(url: string, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithoutData('delete', url, config);\n    }\n\n    post(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithData('delete', url, data, config);\n    }\n\n    put(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithData('delete', url, data, config);\n    }\n\n    patch(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n        return this._requestMethodWithData('delete', url, data, config);\n    }\n\n    getUri(config?: AxiosRequestConfig): string {\n        config = mergeConfig(this.defaults, config);\n        return transformURL(config);\n    }\n\n    _requestMethodWithoutData(method: Method, url: string, config?: AxiosRequestConfig) {\n        return this.request(Object.assign(config || {}, {\n            method,\n            url\n        }))\n    }\n\n    _requestMethodWithData(method: Method, url: string, data: any, config?: AxiosRequestConfig) {\n        return this.request(Object.assign(config || {}, {\n            method,\n            url,\n            data\n        }))\n    }\n}\n","import {\n    isPlainObject\n} from './util';\n// data 转化请求参数\nexport function transformRequest(data: any): any {\n    if (isPlainObject(data)) {\n        return JSON.stringify(data);\n    }\n    return data;\n}\n\n// 转译响应数据\nexport function transformResponse(data: any): any {\n    if (typeof data === 'string') {\n        try {\n            data = JSON.parse(data)\n        } catch (error) {\n            // do nothing\n        }\n    }\n    return data;\n}","// 默认配置\nimport { AxiosRequestConfig } from './types';\nimport { processHeaders } from './helpers/headers';\nimport { transformRequest, transformResponse } from './helpers/data';\n\n// axios 的默认配置\nconst defaults: AxiosRequestConfig = {\n    method: 'get',\n    timeout: 0,\n    headers: {\n        common: {\n            Accept: 'application/json, text/plain, */*'\n        }\n    },\n\n    // transformRequest 允许在向服务器发送前，修改请求数据\n    transformRequest: [\n        function(data: any, headers: any): any {\n            processHeaders(headers, data);\n            return transformRequest(data)\n        }\n    ],\n    // transformResponse` 在传递给 then/catch 前，允许修改响应数据\n    transformResponse: [\n        function(data: any): any {\n            return transformResponse(data);\n        }\n    ],\n\n    // xsrf 防御\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN',\n\n    // 默认的合法状态码的校验规则\n    validateStatus(status: number): boolean {\n        return status >= 200 && status < 300;\n    }\n\n};\n\nconst methodsNoData = ['delete', 'get', 'head', 'options'];\nmethodsNoData.forEach(method => {\n    defaults.headers[method] = {};\n});\n\nconst methodsData = ['post', 'put', 'patch'];\nmethodsData.forEach(method => {\n    defaults.headers[method] = {\n        'Content-Type': 'application/x-www-form-urlencoded'\n    };\n});\n\nexport default defaults;\n\n","// 取消请求类\nexport default class Cancel {\n    message?: string;\n\n    constructor(message?: string) {\n        this.message = message;\n    }\n}\n\nexport function isCancel(value: any): boolean {\n    return value instanceof Cancel;\n}\n \n","// 取消请求Token文件\nimport { CancelExcutor, CancelTokenSource, Canceler } from '../types';\nimport Cancel from './cancel';\n\ninterface ResolvePromise {\n    (reason?: Cancel): void;\n}\n\nexport default class CancelToken {\n    promise: Promise<Cancel>;\n    reason?: Cancel;\n\n    constructor(excutor: CancelExcutor) {\n        let resolvePromise: ResolvePromise;\n\n        this.promise = new Promise<Cancel>(resolve => {\n            resolvePromise = resolve;\n        })\n\n        excutor(message => {\n            if (this.reason) return;\n            this.reason = new Cancel(message);\n            // 将 promise 从 pedding 状态进入到 resolve 状态\n            resolvePromise(this.reason);\n        })\n    }\n\n    throwIfRequest() {\n        if (this.reason) {\n            throw this.reason;\n        }\n    }\n\n    static source(): CancelTokenSource {\n        let cancel!: Canceler;\n        const token = new CancelToken(c => {\n            cancel = c;\n        });\n        return {\n            cancel,\n            token\n        }\n    }\n}\n\n","// axios 初始化文件\nimport { AxiosStatic, AxiosRequestConfig } from './types/index';\nimport Axios from './core/Axios';\nimport { extend } from './helpers/util';\nimport defaults from './defaults';\nimport mergeConfig from './core/mergeConfig';\nimport CancelToken from './cancel/cancelToken';\nimport Cancel, { isCancel } from './cancel/cancel';\n\nfunction createInstance(config: AxiosRequestConfig): AxiosStatic {\n    const context = new Axios(config);\n    const instance = Axios.prototype.request.bind(context);\n\n    extend(instance, context);\n\n    return instance as AxiosStatic;\n}\n\n// 初始化 axios\nconst axios = createInstance(defaults);\n\n// create 新建一个 axios 实例\naxios.create = function create(config) {\n    return createInstance(mergeConfig(defaults, config));\n}\n\n// 取消请求\naxios.CancelToken = CancelToken;\naxios.Cancel = Cancel;\naxios.isCancel = isCancel;\n\naxios.all = function all(promises) {\n    return Promise.all(promises);\n}\n\naxios.spread = function spread(callback) {\n    return function wrap(arr) {\n        return callback.apply(null, arr);\n    }\n}\n\naxios.Axios = Axios;\n\nexport default axios;"],"names":["processHeaders"],"mappings":"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"}